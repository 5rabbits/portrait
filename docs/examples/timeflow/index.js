import React, { Component } from 'react'
import {
  SectionToolbar, Layout, Navigation, NavigationItem, Section,
} from 'main'
import { Button, SearchInput } from 'controls'
import { TableContainer, FiltersForm } from 'shared'
import TimeEntry from './TimeEntry'

export default class App extends Component {
  state = {
    loading: false,
    data: null,
    showResults: true,
  }

  componentDidMount() {
    this.fetchData()
  }

  fetchData = () => {
    this.setState({
      loading: true,
    })

    let data = []

    if (this.state.showResults) {
      data = [
        { id: 1 },
        { id: 2 },
        { id: 3 },
        { id: 4 },
        { id: 5 },
        { id: 6 },
        { id: 7 },
        { id: 8 },
      ]
    }

    setTimeout(() => {
      this.setState({
        loading: false,
        data,
      })
    }, 3000)
  }

  handleShowResultsChange = event => {
    this.setState({
      showResults: event.target.value === 'true',
    })
  }

  handleFiltersSubmit = event => {
    event.preventDefault()
    this.fetchData()
  }

  buildNavigation = () =>
    <Navigation brand="Timeflow example" theme="inverse">
      <NavigationItem label="Calendario" />
      <NavigationItem label="Trabajos" />
      <NavigationItem label="Pre-liquidaciones" />
      <NavigationItem label="Liquidaciones" />
      <NavigationItem label="Administración">
        <NavigationItem label="Proyectos" />
        <NavigationItem label="Clientes" />
        <NavigationItem label="Usuarios" />
        <NavigationItem label="Tarifas" />
      </NavigationItem>
      <NavigationItem label="Signo más" />
      <NavigationItem label="Contacto" />
      <NavigationItem label="Icono user" />
    </Navigation>

  buildFilters = () =>
    <FiltersForm onSubmit={this.handleFiltersSubmit}>
      <div className="form-group">
        <label className="control-label">Show results</label>
        <select
          className="form-control"
          defaultValue={this.state.showResults.toString()}
          onChange={this.handleShowResultsChange}
          >
          <option value="true">Show results</option>
          <option value="false">Simulate no results</option>
        </select>
      </div>
      <div className="form-group">
        <label className="control-label">Other filter 1</label>
        <input type="text" className="form-control" placeholder="Other filter 1" />
      </div>
      <div className="form-group">
        <label className="control-label">Other filter 2</label>
        <input type="text" className="form-control" placeholder="Other filter 2" />
      </div>
      <div className="form-group">
        <label className="control-label">Other filter 3</label>
        <input type="text" className="form-control" placeholder="Other filter 3" />
      </div>
    </FiltersForm>

  buildMain = () => {
    const { loading, data } = this.state

    return (
      <Section
        toolbar={
          <SectionToolbar
            title={<h4>Gastos</h4>}
            search={<SearchInput placeholder="Escribe algo para buscar un proyecto" />}
            actions={<Button label="Nuevo Proyecto" />}
          />
        }
        >
        <TableContainer
          downloadFormat="excel"
          filters={this.buildFilters()}
          loading={loading}
          noResults={data && data.length === 0}
          noResultsTitle="No se encontraron gastos"
          noResultsText="Intenta cambiar los filtros de búsqueda"
          noResultsIcon={
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 66 66">
              <path d="M629,228 C619.988653,228 611.967296,232.269712 606.847656,238.888672 C604.970422,240.347629 603.278247,242.032139 601.826172,243.914062 C595.246265,249.038964 591,257.022639 591,266 C591,281.452128 603.547872,294 619,294 C627.977361,294 635.961036,289.753735 641.085938,283.173828 C642.967861,281.721753 644.652371,280.029578 646.111328,278.152344 C652.730288,273.032704 657,265.011347 657,256 C657,240.547585 644.452415,228 629,228 Z M629,230 C643.371585,230 655,241.628415 655,256 C655,261.703764 653.16067,266.967192 650.048828,271.248047 C651.300949,268.072116 652,264.61845 652,261 C652,245.547585 639.452415,233 624,233 C620.38155,233 616.927884,233.699051 613.751953,234.951172 C618.032808,231.83933 623.296236,230 629,230 Z M624,235 C638.371585,235 650,246.628415 650,261 C650,266.704261 648.160275,271.9679 645.048828,276.25 C646.301748,273.073763 647,269.618844 647,266 C647,250.547872 634.452128,238 619,238 C615.381156,238 611.926237,238.698252 608.75,239.951172 C613.0321,236.839725 618.295739,235 624,235 Z M619,240 C633.371248,240 645,251.628752 645,266 C645,280.371248 633.371248,292 619,292 C604.628752,292 593,280.371248 593,266 C593,251.628752 604.628752,240 619,240 Z M619,243 C618.447715,243 618,243.447715 618,244 C618,244.552285 618.447715,245 619,245 C619.552285,245 620,244.552285 620,244 C620,243.447715 619.552285,243 619,243 Z M613.314453,243.75 C613.291,243.749826 613.267548,243.750478 613.244141,243.751953 C613.177441,243.756399 613.111355,243.767523 613.046875,243.785156 C612.513507,243.928133 612.196983,244.476367 612.339844,245.009766 C612.482821,245.543134 613.031054,245.859657 613.564453,245.716797 C614.097821,245.57382 614.414344,245.025587 614.271484,244.492188 C614.155591,244.057781 613.764035,243.754125 613.314453,243.75 Z M624.685547,243.751953 C624.236521,243.755838 623.845145,244.058555 623.728516,244.492188 C623.585656,245.025587 623.902179,245.57382 624.435547,245.716797 C624.968946,245.859657 625.517179,245.543134 625.660156,245.009766 C625.803017,244.476367 625.486493,243.928133 624.953125,243.785156 C624.86584,243.762059 624.77583,243.75089 624.685547,243.751953 Z M607.976562,245.947266 C607.809092,245.950923 607.645223,245.996592 607.5,246.080078 C607.02176,246.3558 606.857403,246.966892 607.132812,247.445312 C607.265229,247.675509 607.483774,247.843581 607.74025,247.912463 C607.996727,247.981346 608.27007,247.945381 608.5,247.8125 C608.729866,247.679755 608.897523,247.461067 608.966031,247.204618 C609.034539,246.948169 608.998277,246.675005 608.865234,246.445312 C608.682111,246.129546 608.341484,245.938646 607.976562,245.947266 Z M629.951172,245.949219 C629.611439,245.965266 629.303153,246.152886 629.132812,246.447266 C628.999769,246.676959 628.963507,246.950123 629.032016,247.206572 C629.100524,247.46302 629.268182,247.681709 629.498047,247.814453 C629.727977,247.947334 630.001319,247.983299 630.257796,247.914416 C630.514272,247.845534 630.732816,247.677463 630.865234,247.447266 C631.140644,246.968846 630.976287,246.357753 630.498047,246.082031 C630.332228,245.986321 630.142419,245.940225 629.951172,245.949219 Z M603.458984,249.443359 C603.188379,249.439203 602.927645,249.544906 602.736328,249.736328 C602.345904,250.126835 602.345904,250.759884 602.736328,251.150391 C603.126835,251.540815 603.759884,251.540815 604.150391,251.150391 C604.540815,250.759884 604.540815,250.126835 604.150391,249.736328 C603.966731,249.552563 603.71876,249.44749 603.458984,249.443359 Z M634.570312,249.443359 C634.300381,249.439733 634.040451,249.545396 633.849609,249.736328 C633.459185,250.126835 633.459185,250.759884 633.849609,251.150391 C634.240116,251.540815 634.873165,251.540815 635.263672,251.150391 C635.654096,250.759884 635.654096,250.126835 635.263672,249.736328 C635.079529,249.552095 634.830768,249.446985 634.570312,249.443359 Z M638.027344,254 C637.859873,254.003657 637.696004,254.049325 637.550781,254.132812 C637.07325,254.409203 636.90981,255.020138 637.185547,255.498047 C637.461269,255.976287 638.072361,256.140643 638.550781,255.865234 C638.780978,255.732817 638.94905,255.514272 639.017932,255.257796 C639.086814,255.001319 639.05085,254.727977 638.917969,254.498047 C638.734507,254.181657 638.392958,253.990659 638.027344,254 Z M599.900391,254.001953 C599.559952,254.017348 599.250789,254.205054 599.080078,254.5 C598.804669,254.97842 598.969026,255.589512 599.447266,255.865234 C599.925175,256.140971 600.536109,255.977531 600.8125,255.5 C601.088237,255.022091 600.924797,254.411157 600.447266,254.134766 C600.281447,254.039056 600.091638,253.992959 599.900391,254.001953 Z M613.566406,256.302734 L612.533203,267.519531 L615.318359,267.519531 C616.078359,266.256531 617.435141,265.509766 619.119141,265.509766 C621.509141,265.509766 623.167969,267.178719 623.167969,269.636719 C623.167969,272.081719 621.524078,273.697266 619.080078,273.697266 C616.934078,273.697266 615.344281,272.434203 615.113281,270.533203 L612.220703,270.533203 C612.397703,273.969203 615.155734,276.372047 619.052734,276.373047 C623.276734,276.373047 626.140625,273.616641 626.140625,269.556641 C626.140625,265.699641 623.519828,262.984375 619.798828,262.984375 C617.937828,262.984375 616.55225,263.609672 615.65625,264.763672 L615.425781,264.763672 L615.941406,259.017578 L625,259.017578 L625,256.302734 L613.566406,256.302734 Z M597.740234,259.306641 C597.290653,259.310766 596.899097,259.614422 596.783203,260.048828 C596.640342,260.582227 596.956866,261.130461 597.490234,261.273438 C598.023634,261.416299 598.571867,261.099775 598.714844,260.566406 C598.78404,260.309985 598.748386,260.03657 598.615748,259.806469 C598.48311,259.576367 598.264383,259.408482 598.007812,259.339844 C597.920527,259.316747 597.830517,259.305578 597.740234,259.306641 Z M640.257812,259.306641 C640.234359,259.306467 640.210907,259.307119 640.1875,259.308594 C640.1208,259.31304 640.054714,259.324164 639.990234,259.341797 C639.456866,259.484774 639.140343,260.033007 639.283203,260.566406 C639.42618,261.099774 639.974413,261.416298 640.507812,261.273438 C641.041181,261.130461 641.357705,260.582228 641.214844,260.048828 C641.09895,259.614421 640.707394,259.310766 640.257812,259.306641 Z M597,265 C596.447715,265 596,265.447715 596,266 C596,266.552285 596.447715,267 597,267 C597.552285,267 598,266.552285 598,266 C598,265.447715 597.552285,265 597,265 Z M641,265 C640.447715,265 640,265.447715 640,266 C640,266.552285 640.447715,267 641,267 C641.552285,267 642,266.552285 642,266 C642,265.447715 641.552285,265 641,265 Z M597.757812,270.693359 C597.734359,270.693185 597.710907,270.693837 597.6875,270.695312 C597.6208,270.699759 597.554714,270.710882 597.490234,270.728516 C596.956866,270.871493 596.640343,271.419726 596.783203,271.953125 C596.92618,272.486493 597.474413,272.803016 598.007812,272.660156 C598.54118,272.517179 598.857704,271.968946 598.714844,271.435547 C598.59895,271.00114 598.207394,270.697484 597.757812,270.693359 Z M640.240234,270.695312 C639.790652,270.699437 639.399096,271.003093 639.283203,271.4375 C639.140343,271.970899 639.456866,272.519132 639.990234,272.662109 C640.523633,272.80497 641.071867,272.488446 641.214844,271.955078 C641.357704,271.421679 641.04118,270.873446 640.507812,270.730469 C640.420618,270.706713 640.330606,270.694886 640.240234,270.695312 Z M599.923828,276 C599.756358,276.003657 599.592489,276.049326 599.447266,276.132812 C598.969025,276.408534 598.804668,277.019626 599.080078,277.498047 C599.212496,277.728244 599.43104,277.896316 599.687517,277.965198 C599.943993,278.03408 600.217336,277.998115 600.447266,277.865234 C600.677131,277.732489 600.844788,277.513801 600.913297,277.257352 C600.981805,277.000904 600.945543,276.72774 600.8125,276.498047 C600.629377,276.182281 600.28875,275.99138 599.923828,276 Z M638.003906,276.001953 C637.663782,276.018414 637.35541,276.206822 637.185547,276.501953 C636.90981,276.979862 637.07325,277.590797 637.550781,277.867188 C637.780474,278.000231 638.053639,278.036493 638.310087,277.967985 C638.566536,277.899476 638.785225,277.731819 638.917969,277.501953 C639.05085,277.272023 639.086814,276.998681 639.017932,276.742204 C638.94905,276.485728 638.780978,276.267183 638.550781,276.134766 C638.384962,276.039056 638.195153,275.992959 638.003906,276.001953 Z M603.457031,280.556641 C603.187384,280.552499 602.927494,280.65744 602.736328,280.847656 C602.54824,281.035265 602.442532,281.290006 602.442532,281.555664 C602.442532,281.821322 602.54824,282.076063 602.736328,282.263672 C603.127374,282.653557 603.760423,282.652683 604.150391,282.261719 C604.540815,281.871212 604.540815,281.238163 604.150391,280.847656 C603.965933,280.66414 603.71721,280.559746 603.457031,280.556641 Z M634.570312,280.556641 C634.299707,280.552485 634.038973,280.658188 633.847656,280.849609 C633.457232,281.240116 633.457232,281.873165 633.847656,282.263672 C634.238163,282.654096 634.871212,282.654096 635.261719,282.263672 C635.652143,281.873165 635.652143,281.240116 635.261719,280.849609 C635.078059,280.665844 634.830088,280.560772 634.570312,280.556641 Z M629.974609,284.050781 C629.806968,284.055034 629.643088,284.101377 629.498047,284.185547 C629.020516,284.461938 628.857075,285.072872 629.132812,285.550781 C629.408534,286.029022 630.019626,286.193379 630.498047,285.917969 C630.728244,285.785551 630.896316,285.567007 630.965198,285.31053 C631.03408,285.054054 630.998115,284.780711 630.865234,284.550781 C630.682278,284.233639 630.340631,284.041837 629.974609,284.050781 Z M607.951172,284.054688 C607.611439,284.070734 607.303154,284.258354 607.132812,284.552734 C606.999931,284.782664 606.963966,285.056007 607.032849,285.312484 C607.101731,285.56896 607.269803,285.787505 607.5,285.919922 C607.97842,286.195331 608.589512,286.030974 608.865234,285.552734 C609.140971,285.074825 608.977531,284.463891 608.5,284.1875 C608.333615,284.091425 608.143075,284.045316 607.951172,284.054688 Z M624.701172,286.25 C624.677719,286.249826 624.654267,286.250478 624.630859,286.251953 C624.56416,286.2564 624.498074,286.267523 624.433594,286.285156 C623.900225,286.428133 623.583701,286.976366 623.726562,287.509766 C623.869539,288.043134 624.417773,288.359658 624.951172,288.216797 C625.48454,288.07382 625.801063,287.525587 625.658203,286.992188 C625.54231,286.557781 625.150754,286.254125 624.701172,286.25 Z M613.294922,286.251953 C612.845896,286.255838 612.45452,286.558555 612.337891,286.992188 C612.195031,287.525587 612.511554,288.07382 613.044922,288.216797 C613.578321,288.359657 614.126554,288.043134 614.269531,287.509766 C614.412392,286.976367 614.095868,286.428133 613.5625,286.285156 C613.475215,286.262059 613.385205,286.25089 613.294922,286.251953 Z M619,287 C618.447715,287 618,287.447715 618,288 C618,288.552285 618.447715,289 619,289 C619.552285,289 620,288.552285 620,288 C620,287.447715 619.552285,287 619,287 Z" transform="translate(-591 -228)" />
            </svg>
          }
          totals={data && `${data.length} Registros`}
          >
          {data && data.map(item =>
            <TimeEntry key={item.id} />,
          )}
        </TableContainer>
      </Section>
    )
  }

  render() {
    return (
      <Layout
        header="header"
        navigation={this.buildNavigation()}
        main={this.buildMain()}
      />
    )
  }
}
