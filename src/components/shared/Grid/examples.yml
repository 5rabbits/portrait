-
  description: |
    This example shows multiple Grid uses to build a calendar with time entries.

    **Note:** All `className` props are merely for styling, you can safely remove them to see only
    the layout placement.

  inline: false
  code: >
    const Calendar = () =>
      <Grid
        className="calendar"
        gutter={false}
        >
        <CalendarDay date="Monday 24" time="2h 25m">
          <TimeEntry height={65} />
          <TimeEntry height={100} />
        </CalendarDay>
        <CalendarDay date="Tuesday 25" time="0h 00m" />
        <CalendarDay date="Wednesday 26" time="3h 00m">
          <TimeEntry height={220} />
        </CalendarDay>
        <CalendarDay date="Thursday 27" time="0h 00m" />
        <CalendarDay date="Friday 28" time="0h 00m" />
      </Grid>

    const CalendarDay = ({ children, date, time, ...other }) =>
      <Grid
        {...other}
        className="calendar-day"
        direction="vertical"
        size={['min', 'fill']}
        gutter="small"
        >
        <Grid
          className="calendar-day__head"
          size={['fill', 'min']}
          >
          <div className="calendar-day__date">{date}</div>
          <div className="calendar-day__duration">{time}</div>
        </Grid>
        <Grid
          className="calendar-day__body"
          direction="vertical"
          gutter="small"
          size="min"
          >
          {children}
        </Grid>
      </Grid>

    const TimeEntry = ({ height }) =>
      <Grid
        className="time-entry"
        direction="vertical"
        gutter="small"
        size={['min', 'fill', 'min']}
        style={{ height }}
        >
        <div>Project</div>
        <div className="overflow-hidden">
          Aliqua culpa consequat mollit sint duis ullamco deserunt duis. Irure consequat velit est officia anim tempor.
        </div>
        <Grid
          align="center"
          size={['fill', 'min']}
          >
          <div>00h 00m</div>
          <i className="fa fa-lock" />
        </Grid>
      </Grid>

    ReactDOM.render(<Calendar />, mountNode)
