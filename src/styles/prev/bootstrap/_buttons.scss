// Buttons
// --------------------------------------------------

// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons

@mixin button-variant($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;

  &:hover,
  &:focus,
  &.focus,
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: $color;
    background-color: darken($background, 10%);
        border-color: darken($border, 10%);
  }
  &:focus,
  &.focus {
    outline: none;
    box-shadow: 0 0 0 1px rgba(white,.7), 0 0 0 3px rgba($background,.4);
  }
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    background-image: none;
  }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &.focus,
    &:active,
    &.active {
      background-color: $background;
          border-color: $background;
    }
  }

  .badge {
    color: $background;
    background-color: $background;
  }
}

@mixin button-inverse-variant($color) {
  color: darken($color, 15%);
  background-image: none;
  background-color: $color-inverse;
  border-color: $color-inverse;

  &:hover {
    color: $color-inverse;
    background-color: $color;
        border-color: $color;
  }

  &:focus,
  &.focus {
    color: $color-inverse;
    background-color: $color;
        border-color: $color;
  }

  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: $color-inverse;
    background-color: darken($color,10%);;
        border-color: darken($color,10%);;

    &:hover,
    &:focus,
    &.focus {
      color: $color-inverse;
      background-color: $color;
          border-color: $color;
    }
  }

  &.disabled,
  &:disabled {
    &:focus,
    &.focus {
      border-color: lighten($color, 20%);
    }
    &:hover {
      border-color: lighten($color, 20%);
    }
  }
}

@mixin button-outline-variant($color) {
  color: darken($color, 15%);
  background-image: none;
  background-color: white;
  //border-color: $color;
  border-color: rgba($color,.4);
  box-shadow: none;

  &:hover {
    color: white;
    background-color: $color;
        border-color: $color;
  }

  &:focus,
  &.focus {
    color: $color-inverse;
    background-color: $color;
        border-color: $color;
        outline: none;
  }

  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: $color-inverse;
    background-color: $color;
        border-color: $color;

    &:hover,
    &:focus,
    &.focus {
      color: $color-inverse;
      background-color: darken($color, 17%);
          border-color: darken($color, 25%);
    }
  }

  &.disabled,
  &:disabled {
    &:focus,
    &.focus {
      border-color: lighten($color, 20%);
    }
    &:hover {
      border-color: lighten($color, 20%);
    }
  }
}

// Button sizes
@mixin button-size($padding-vertical, $padding-horizontal, $font-size, $line-height, $border-radius) {
  padding: $padding-vertical $padding-horizontal;
  font-size: $font-size;
  line-height: $line-height;
  border-radius: $border-radius;
}


// Base styles
// --------------------------------------------------

.btn {
  display: inline-block;
  margin-bottom: 0; // For input.btn
  font-weight: $btn-font-weight;
  text-align: center;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid transparent;
  white-space: nowrap;
  box-shadow: 0 1px 1px 0 rgba(0,0,0,0.10);
  transition: all 250ms;

  @include button-size($padding-base-vertical, $padding-base-horizontal, $font-size-base, $line-height-base, $btn-border-radius-base);
  @include user-select(none);

  &,
  &:active,
  &.active {
    &:focus,
    &.focus {
      @include tab-focus;
    }
  }

  &:hover,
  &:focus,
  &.focus {
    color: $btn-default-color;
    text-decoration: none;
  }

  &:active,
  &.active {
    outline: 0;
    background-image: none;
    @include box-shadow(inset 0 3px 5px rgba(0,0,0,.125));
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    cursor: $cursor-disabled;
    @include opacity(.65);
    @include box-shadow(none);
  }

  // [converter] extracted a& to a.btn
}

a.btn {
  &.disabled,
  fieldset[disabled] & {
    pointer-events: none; // Future-proof disabling of clicks on `<a>` elements
  }
}


// Alternate buttons
// --------------------------------------------------
// Success appears as green
// Info appears as blue-green
// Warning appears as orange
// Danger and error appear as red

.btn-default   { @include button-variant($btn-default-color,   $btn-default-bg,   $btn-default-border); }
.btn-primary   { @include button-variant($btn-primary-color,   $btn-primary-bg,   $btn-primary-border); }
.btn-secondary { @include button-variant($btn-secondary-color, $btn-secondary-bg, $btn-secondary-border); }
.btn-success   { @include button-variant($btn-success-color,   $btn-success-bg,   $btn-success-border); }
.btn-info      { @include button-variant($btn-info-color,      $btn-info-bg,      $btn-info-border); }
.btn-warning   { @include button-variant($btn-warning-color,   $btn-warning-bg,   $btn-warning-border); }
.btn-danger    { @include button-variant($btn-danger-color,    $btn-danger-bg,    $btn-danger-border); }

.btn-outline-default   { @include button-outline-variant($btn-default-border); }
.btn-outline-primary   { @include button-outline-variant($btn-primary-bg); }
.btn-outline-secondary { @include button-outline-variant($btn-secondary-bg); }
.btn-outline-success   { @include button-outline-variant($btn-success-bg); }
.btn-outline-info      { @include button-outline-variant($btn-info-bg); }
.btn-outline-warning   { @include button-outline-variant($btn-warning-bg); }
.btn-outline-danger    { @include button-outline-variant($btn-danger-bg); }

.btn-inverse-default   { @include button-inverse-variant($btn-default-border); }
.btn-inverse-secondary { @include button-inverse-variant($btn-secondary-bg); }
.btn-inverse-primary   { @include button-inverse-variant($btn-primary-bg); }
.btn-inverse-success   { @include button-inverse-variant($btn-success-bg); }
.btn-inverse-info      { @include button-inverse-variant($btn-info-bg); }
.btn-inverse-warning   { @include button-inverse-variant($btn-warning-bg); }
.btn-inverse-danger    { @include button-inverse-variant($btn-danger-bg); }


// Link buttons
// -------------------------

// Make a button look and behave like a link
.btn-link {
  color: $link-color;
  font-weight: normal;
  border-radius: 0;

  &,
  &:active,
  &.active,
  &[disabled],
  fieldset[disabled] & {
    background-color: transparent;
    @include box-shadow(none);
  }
  &,
  &:hover,
  &:focus,
  &:active {
    border-color: transparent;
  }
  &:hover,
  &:focus {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
  }
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus {
      color: $btn-link-disabled-color;
      text-decoration: none;
    }
  }
}


// Button Sizes
// --------------------------------------------------

// .btn-lg line-height: ensure even-numbered height of button next to large input
// .btn-sm line-height: ensure proper height of button next to small input
.btn-lg { @include button-size($padding-large-vertical, $padding-large-horizontal, $font-size-large, $line-height-large, $btn-border-radius-large); }
.btn-sm { @include button-size($padding-small-vertical, $padding-small-horizontal, $font-size-small, $line-height-small, $btn-border-radius-small); }
.btn-xs { @include button-size($padding-xs-vertical,    $padding-xs-horizontal,    $font-size-small, $line-height-small, $btn-border-radius-small); }


.btn-rounded {
  border-radius: 30px;
}

// Ghost button
// --------------------------------------------------

.btn-ghost {
  background-image: none;
  background-color: transparent;
}


// Block button
// --------------------------------------------------

.btn-block {
  display: block;
  width: 100%;
}

// Vertically space out multiple block buttons
.btn-block + .btn-block {
  margin-top: 5px;
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}



.btn + .btn {
  margin-left: 8px;
}



.btn-default {
  &:hover,
  &:focus,
  &.focus,
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    background-color: solidify(dark-text-color(.1));
        border-color: solidify(dark-text-color(.2));

  }
}


.btn-outline-default {
  & {
    color: dark-text-color(secondary);
  }
  &:hover,
  &:focus,
  &.focus,
  &:active,
  &.active,
  .open > &.dropdown-toggle {
               color: dark-text-color(primary);
    background-color: solidify(dark-text-color(.15));
        border-color: solidify(dark-text-color(.15));

  }
}

.btn-inverse-default {
  & {
    color: dark-text-color(secondary);
  }
  &:hover,
  &:focus,
  &.focus,
  &:active,
  &.active,
  .open > &.dropdown-toggle {
               color: dark-text-color(primary);
    background-color: solidify(dark-text-color(.15));
        border-color: solidify(dark-text-color(.15));

  }
}
